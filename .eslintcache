[{"C:\\Users\\Владимир\\Develop\\movie-search\\src\\index.js":"1","C:\\Users\\Владимир\\Develop\\movie-search\\src\\App.js":"2","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Header.jsx":"3","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\redusers\\films.js":"4","C:\\Users\\Владимир\\Develop\\movie-search\\src\\pages\\Home.jsx":"5","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\loadFilms.js":"6","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\isLoaded.js":"7","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\FilmCard.jsx":"8","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\getId.js":"9","C:\\Users\\Владимир\\Develop\\movie-search\\src\\pages\\FilmPage.jsx":"10","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Slider.jsx":"11","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Loader.jsx":"12","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\initialSlider.js":"13","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\InfoItem.jsx":"14"},{"size":394,"mtime":1610298036621,"results":"15","hashOfConfig":"16"},{"size":392,"mtime":1610298327583,"results":"17","hashOfConfig":"16"},{"size":1705,"mtime":1611668466178,"results":"18","hashOfConfig":"16"},{"size":900,"mtime":1611171738706,"results":"19","hashOfConfig":"16"},{"size":572,"mtime":1611665730941,"results":"20","hashOfConfig":"16"},{"size":91,"mtime":1610109759585,"results":"21","hashOfConfig":"16"},{"size":58,"mtime":1610120700339,"results":"22","hashOfConfig":"16"},{"size":809,"mtime":1610971632733,"results":"23","hashOfConfig":"16"},{"size":75,"mtime":1610109798267,"results":"24","hashOfConfig":"16"},{"size":4223,"mtime":1612188316528,"results":"25","hashOfConfig":"16"},{"size":5316,"mtime":1611934959096,"results":"26","hashOfConfig":"16"},{"size":77,"mtime":1610801422514,"results":"27","hashOfConfig":"16"},{"size":95,"mtime":1611171783324,"results":"28","hashOfConfig":"16"},{"size":1712,"mtime":1611769204592,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1kxs0f",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"C:\\Users\\Владимир\\Develop\\movie-search\\src\\index.js",[],["62","63"],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\App.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Header.jsx",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\redusers\\films.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\pages\\Home.jsx",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\loadFilms.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\isLoaded.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\FilmCard.jsx",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\getId.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\pages\\FilmPage.jsx",["64"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport InfoItem from '../components/InfoItem'\r\nimport Slider from '../components/Slider';\r\nimport Loader from '../components/Loader';\r\nimport { initialSlider } from '../redux/actions/initialSlider';\r\n\r\nconst headers = {\r\n    'X-API-KEY': '41bf77c1-b2b8-4711-b6b6-76cf890ced57',\r\n};\r\n\r\nconst FilmPage = () => {\r\n\r\n    const [film, setFilm] = React.useState(null);\r\n    const [trailerId, setTrailerId] = React.useState('');\r\n    const [slidePos, setSlidePos] = React.useState('440px');\r\n\r\n    const { id, autoSlider } = useSelector(state => state);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const loadFilmInfo = async (id) => {\r\n        const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}`, { headers });\r\n        const { data } = await res.json();\r\n        setFilm(data);\r\n    };\r\n\r\n    const loadTrailer = async (id) => {\r\n        try {\r\n            const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}/videos`, { headers });\r\n            const { trailers } = await res.json();\r\n            const trailerId = trailers[0].url.split('=').filter((_, id) => id === 1).join();\r\n            setTrailerId(trailerId);\r\n        } catch (error) {\r\n            setTrailerId('');\r\n            console.log(error);\r\n        };\r\n    };\r\n\r\n    const changeSlidePosition = () => {\r\n        const width = document.body.clientWidth;\r\n        if (width <= 950 && width >= 360) {\r\n            setSlidePos('340px');\r\n        } else if (width <= 350) {\r\n            setSlidePos('300px')\r\n        };\r\n        console.log('Размер окна', width);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        loadFilmInfo(id);\r\n        loadTrailer(id);\r\n        dispatch(initialSlider(true));\r\n    }, []);\r\n\r\n    const itemArr = [\r\n        {\r\n            title: 'Страна',\r\n            item: !film ? [] : film.countries[0].country\r\n        },\r\n        {\r\n            title: 'Жанр',\r\n            item: !film ? [] : film.genres\r\n        },\r\n        {\r\n            title: 'Описание',\r\n            item: !film ? [] : film.description\r\n        },\r\n        {\r\n            title: 'Факты',\r\n            item: !film ? [] : film.facts\r\n        },\r\n        {\r\n            title: 'Трейлер',\r\n            item: trailerId\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='filmPage'>\r\n            {!film ? <Loader />\r\n                : (\r\n                    <div className='filmBlock'>\r\n                        <Slider\r\n                            id={id}\r\n                            autoSliderInit={autoSlider}\r\n                            changePosition={changeSlidePosition}\r\n                            position={slidePos}\r\n                        />\r\n                        <div className='infoWrapper'>\r\n                            <img className='desctopPoster'\r\n                                src={film.posterUrlPreview}\r\n                                alt='poster'>\r\n                            </img>\r\n                            <div className='infoBlock'>\r\n                                <div className='nameBlock'>\r\n                                    <img className='mobilePoster'\r\n                                        src={film.posterUrlPreview}\r\n                                        alt='poster'>\r\n                                    </img>\r\n                                    <div>\r\n                                        <h1>{film.nameRu}</h1>\r\n                                        <span><p>{`${film.nameEn} (${film.year})`}</p></span>\r\n                                    </div>\r\n                                </div>\r\n                                {itemArr.map((item, index) => <InfoItem infoItem={item} i={index} />)}\r\n                                <div className='infoItem'>\r\n                                    <Link to='/'><h4>Вернутся на главную</h4></Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilmPage\r\n","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Slider.jsx",["65","66","67"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { initialSlider } from '../redux/actions/initialSlider'\n\nconst headers = {\n    'X-API-KEY': '41bf77c1-b2b8-4711-b6b6-76cf890ced57',\n};\n\nconst Slider = ({ id, autoSliderInit, position, changePosition }) => {\n\n    const [slideArr, setSlideArr] = React.useState([]);\n    const [slideCount, setSlideCount] = React.useState(1);\n    // const [slideSize, setSlideSize] = React.useState({\n    //     width: '950px',\n    //     height: '440px'\n    // });\n\n    let interval = null;\n\n    const dispatch = useDispatch();\n\n    const loadFrames = async (id) => {\n        try {\n            const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}/frames`, { headers });\n            const { frames } = await res.json();\n            const framesArr = frames.filter((_, id) => id < 15);\n            setSlideArr(framesArr);\n        } catch {\n            setSlideArr([]);\n        };\n    };\n\n    if (autoSliderInit && slideArr.length) {\n        interval = setInterval(() => {\n            setSlideCount(slideCount === slideArr.length - 1 ? 0 : slideCount + 1);\n            clearInterval(interval);\n        }, 3000);\n    }\n\n    const stopAutoSlider = () => {\n        clearInterval(interval);\n        dispatch(initialSlider(false));\n    };\n\n    const slideFoward = () => {\n        stopAutoSlider();\n        setSlideCount(slideCount === slideArr.length - 1 ? 0 : slideCount + 1);\n    };\n\n    const slideBack = () => {\n        stopAutoSlider();\n        setSlideCount(slideCount === 0 ? slideArr.length - 1 : slideCount - 1);\n    };\n\n    // const changeSlideSize = () => {\n    //     const windowWidth = document.body.clientWidth;\n    //     if (windowWidth <= 950) {\n    //         setSlideSize({\n    //             width: '100wv',\n    //             height: '440px'\n    //         })\n    //     }\n\n    //     console.log(windowWidth);\n    // }\n\n    // const sliderItems = (url, index) => (\n    //     {\n    //         width: size.width,\n    //         height: size.height,\n    //         marginTop: `${index > 0 ? `-${size.height}` : ''}`,\n    //         backgroundImage: `url(${url})`,\n    //         backgroundSize: 'cover',\n    //         borderRadius: '3px',\n    //         transition: '1.5s',\n    //         position: 'relative',\n    //         zIndex: index + 1,\n    //         opacity: `${index === slideCount ? '100%' : '0'}`\n    //     }\n    // );\n\n    const slideStyles = (index) => (\n        {\n            margin: '0 auto',\n            display: 'block',\n            // width: size.width,\n            // height: size.height,\n            marginTop: `${index > 0 ? `-${position}` : ''}`,\n            borderRadius: '3px',\n            transition: '1.5s',\n            // position: 'relative',\n            zIndex: index + 1,\n            opacity: `${index === slideCount ? '100%' : '0'}`\n        }\n    );\n\n    console.log(position);\n\n    React.useEffect(() => {\n        loadFrames(id);\n        changePosition();\n    }, []);\n\n    return (\n        <div className='sliderWrapper'>\n            <div className='sliderBlock'>\n                {slideArr.length\n                    ? slideArr.map((frame, id) => <img key={id} src={frame.image} style={slideStyles(id)} />)\n                    : <img src='https://argamak-sher.uz/wp-content/uploads/no-image.png'></img>}\n            </div>\n            <div className={`sliderBtnBlock ${!slideArr.length ? 'hide' : ''}`}>\n                <button onClick={slideBack}>\n                    <svg\n                        className=\"left\"\n                        width=\"50\"\n                        height=\"50\"\n                        viewBox=\"0 0 10 6\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                            fill=\"black\"\n                        />\n                    </svg>\n                </button>\n                <button onClick={slideFoward}>\n                    <svg\n                        className=\"right\"\n                        width=\"50\"\n                        height=\"50\"\n                        viewBox=\"0 0 10 6\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                            fill=\"black\"\n                        />\n                        <g></g>\n                    </svg>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Slider","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Loader.jsx",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\initialSlider.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\InfoItem.jsx",["68"],"import React from 'react'\r\n\r\nconst InfoItem = ({ infoItem, i }) => {\r\n\r\n    const [spoilerInit, setSpoilerInit] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setSpoilerInit(!spoilerInit);\r\n    };\r\n\r\n    return (\r\n        <div className={`infoItem ${(!infoItem.item || !infoItem.item.length) ? 'hide' : ''}`}>\r\n            <h3>{infoItem.title}</h3>\r\n            {\r\n                i === 1 ? <ul>{infoItem.item.map((item, i) => <li key={i}>{item.genre}</li>)}</ul>\r\n                    : i === 3 ? (\r\n                        <details>\r\n                            <summary onClick={handleClick}>\r\n                                {!spoilerInit ? 'Показать' : 'Скрыть'}\r\n                            </summary>\r\n                            <ul>{infoItem.item.map((item, i) => <li key={i}>{item}</li>)}</ul>\r\n                        </details>\r\n                    )\r\n                        : i === 4 ? (\r\n                            <div className='trailerBlock'>\r\n                                <iframe\r\n                                    width=\"660\"\r\n                                    height=\"415\"\r\n                                    src={`https://www.youtube.com/embed/${infoItem.item}?&disablekb=0`}\r\n                                    frameBorder=\"0\"\r\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                    allowFullScreen>\r\n                                </iframe>\r\n                            </div>\r\n                        )\r\n                            : <p>{infoItem.item}</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoItem\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":56,"column":8,"nodeType":"75","endLine":56,"endColumn":10,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":103,"column":8,"nodeType":"75","endLine":103,"endColumn":10,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":109,"column":51,"nodeType":"81","endLine":109,"endColumn":109},{"ruleId":"79","severity":1,"message":"80","line":110,"column":23,"nodeType":"81","endLine":110,"endColumn":90},{"ruleId":"82","severity":1,"message":"83","line":26,"column":33,"nodeType":"81","endLine":32,"endColumn":53},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["86"],"React Hook React.useEffect has missing dependencies: 'changePosition' and 'id'. Either include them or remove the dependency array. If 'changePosition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["87"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [dispatch, id]",{"range":"92","text":"93"},"Update the dependencies array to be: [changePosition, id]",{"range":"94","text":"95"},[1852,1854],"[dispatch, id]",[3000,3002],"[changePosition, id]"]