[{"C:\\Users\\Владимир\\Develop\\movie-search\\src\\index.js":"1","C:\\Users\\Владимир\\Develop\\movie-search\\src\\App.js":"2","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Header.jsx":"3","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\redusers\\films.js":"4","C:\\Users\\Владимир\\Develop\\movie-search\\src\\pages\\Home.jsx":"5","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\FilmCard.jsx":"6","C:\\Users\\Владимир\\Develop\\movie-search\\src\\pages\\FilmPage.jsx":"7","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Slider.jsx":"8","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Loader.jsx":"9","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\InfoItem.jsx":"10","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\redusers\\index.js":"11","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\store.js":"12","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\redusers\\slider.js":"13","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\films.js":"14","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\slider.js":"15"},{"size":560,"mtime":1612447892086,"results":"16","hashOfConfig":"17"},{"size":392,"mtime":1610298327583,"results":"18","hashOfConfig":"17"},{"size":1737,"mtime":1612873595289,"results":"19","hashOfConfig":"17"},{"size":656,"mtime":1612537519472,"results":"20","hashOfConfig":"17"},{"size":578,"mtime":1612537929361,"results":"21","hashOfConfig":"17"},{"size":810,"mtime":1612455090299,"results":"22","hashOfConfig":"17"},{"size":9835,"mtime":1613047478006,"results":"23","hashOfConfig":"17"},{"size":3709,"mtime":1613050175281,"results":"24","hashOfConfig":"17"},{"size":77,"mtime":1610801422514,"results":"25","hashOfConfig":"17"},{"size":3498,"mtime":1612797318391,"results":"26","hashOfConfig":"17"},{"size":203,"mtime":1612453351282,"results":"27","hashOfConfig":"17"},{"size":229,"mtime":1612453808522,"results":"28","hashOfConfig":"17"},{"size":1082,"mtime":1612633135646,"results":"29","hashOfConfig":"17"},{"size":230,"mtime":1612454797064,"results":"30","hashOfConfig":"17"},{"size":359,"mtime":1612633098166,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1v4ymag",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\Владимир\\Develop\\movie-search\\src\\index.js",["66"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore } from 'redux'\n\nimport App from './App';\nimport './scss/app.scss';\n// import store from './redux/redusers/films'\n// import rootReduser from './redux/redusers';\n\nimport store from './redux/store';\n\n// const store = createStore(rootReduser);\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n",["67","68"],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\App.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Header.jsx",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\redusers\\films.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\pages\\Home.jsx",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\FilmCard.jsx",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\pages\\FilmPage.jsx",["69","70","71"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport InfoItem from '../components/InfoItem'\r\nimport Slider from '../components/Slider';\r\nimport Loader from '../components/Loader';\r\nimport { initialSlider, changeSlidePosition, changeCounter, loadFrames } from '../redux/actions/slider';\r\n\r\nconst headers = {\r\n    'X-API-KEY': '41bf77c1-b2b8-4711-b6b6-76cf890ced57',\r\n};\r\n\r\nlet interval = null;\r\n\r\nconst FilmPage = React.memo(function FilmPage() {\r\n    const [film, setFilm] = React.useState(null);\r\n    const [trailerId, setTrailerId] = React.useState('');\r\n\r\n    const { id } = useSelector(({ films }) => films);\r\n    const { autoSlider, sliderCount, slidePosition, frames } = useSelector(({ slider }) => slider);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const loadFilmInfo = async (id) => {\r\n        const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}`, { headers });\r\n        const { data } = await res.json();\r\n        setFilm(data);\r\n    };\r\n\r\n    const loadTrailer = async (id) => {\r\n        try {\r\n            const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}/videos`, { headers });\r\n            const { trailers } = await res.json();\r\n            const trailerId = trailers[0].url.split('=').filter((_, id) => id === 1).join();\r\n            setTrailerId(trailerId);\r\n        } catch (error) {\r\n            setTrailerId('');\r\n            console.log(error);\r\n        };\r\n    };\r\n\r\n    const loadSlider = async (id) => {\r\n        try {\r\n            const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}/frames`, { headers });\r\n            const { frames } = await res.json();\r\n            const framesArr = frames.filter((_, id) => id < 15);\r\n            dispatch(loadFrames(framesArr));\r\n        } catch (error) {\r\n            dispatch(loadFrames([]));\r\n        };\r\n    };\r\n\r\n    // if (autoSlider) {\r\n    //     interval = setInterval(() => {\r\n    //         let count = sliderCount;\r\n    //         dispatch(changeCounter(count === frames.length - 1 ? 0 : ++count));\r\n    //         clearInterval(interval);\r\n    //     }, 3000);\r\n    // };\r\n\r\n    // const stopAutoSlider = () => {\r\n    //     clearInterval(interval);\r\n    //     dispatch(initialSlider(false));\r\n    // };\r\n\r\n    React.useEffect(() => {\r\n        loadFilmInfo(id);\r\n        loadTrailer(id);\r\n        loadSlider(id);\r\n        dispatch(initialSlider(true));\r\n        dispatch(changeSlidePosition());\r\n    }, []);\r\n\r\n    const itemArr = [\r\n        {\r\n            title: 'Страна',\r\n            item: !film ? [] : film.countries[0].country\r\n        },\r\n        {\r\n            title: 'Жанр',\r\n            item: !film ? [] : film.genres\r\n        },\r\n        {\r\n            title: 'Описание',\r\n            item: !film ? [] : film.description\r\n        },\r\n        {\r\n            title: 'Факты',\r\n            item: !film ? [] : film.facts\r\n        },\r\n        {\r\n            title: 'Трейлер',\r\n            item: trailerId\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='filmPage'>\r\n            {!film ? <Loader />\r\n                : (\r\n                    <div className='filmBlock'>\r\n                        <Slider\r\n                            id={id}\r\n                            autoSliderInit={autoSlider}\r\n                            count={sliderCount}\r\n                            position={slidePosition}\r\n                            frames={frames}\r\n                        // stopSlider={stopAutoSlider}\r\n                        />\r\n                        <div className='infoWrapper'>\r\n                            <img className='desctopPoster'\r\n                                src={film.posterUrlPreview}\r\n                                alt='poster'>\r\n                            </img>\r\n                            <div className='infoBlock'>\r\n                                <div className='nameBlock'>\r\n                                    <img className='mobilePoster'\r\n                                        src={film.posterUrlPreview}\r\n                                        alt='poster'>\r\n                                    </img>\r\n                                    <div>\r\n                                        <h1>{film.nameRu}</h1>\r\n                                        <span><p>{`${film.nameEn} (${film.year})`}</p></span>\r\n                                    </div>\r\n                                </div>\r\n                                {itemArr.map((item, index) => <InfoItem key={index} infoItem={item} i={index} />)}\r\n                                <div className='infoItem'>\r\n                                    <Link to='/'><h4>Вернутся на главную</h4></Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n});\r\n\r\n// const FilmPage = () => {\r\n\r\n//     const [film, setFilm] = React.useState(null);\r\n//     const [trailerId, setTrailerId] = React.useState('');\r\n\r\n//     const { id } = useSelector(({ films }) => films);\r\n//     const { autoSlider, sliderCount, slidePosition, frames } = useSelector(({ slider }) => slider);\r\n\r\n//     let interval = null;\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     const loadFilmInfo = async (id) => {\r\n//         const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}`, { headers });\r\n//         const { data } = await res.json();\r\n//         setFilm(data);\r\n//     };\r\n\r\n//     const loadTrailer = async (id) => {\r\n//         try {\r\n//             const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}/videos`, { headers });\r\n//             const { trailers } = await res.json();\r\n//             const trailerId = trailers[0].url.split('=').filter((_, id) => id === 1).join();\r\n//             setTrailerId(trailerId);\r\n//         } catch (error) {\r\n//             setTrailerId('');\r\n//             console.log(error);\r\n//         };\r\n//     };\r\n\r\n//     const loadSlider = async (id) => {\r\n//         try {\r\n//             const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}/frames`, { headers });\r\n//             const { frames } = await res.json();\r\n//             const framesArr = frames.filter((_, id) => id < 15);\r\n//             dispatch(loadFrames(framesArr));\r\n//         } catch (error) {\r\n//             dispatch(loadFrames([]));\r\n//         };\r\n//     };\r\n\r\n//     if (autoSlider) {\r\n//         interval = setInterval(() => {\r\n//             let count = sliderCount;\r\n//             dispatch(changeCounter(count === frames.length - 1 ? 0 : ++count));\r\n//             clearInterval(interval);\r\n//         }, 3000);\r\n//     };\r\n\r\n//     const stopAutoSlider = () => {\r\n//         clearInterval(interval);\r\n//         dispatch(initialSlider(false));\r\n//     };\r\n\r\n//     console.log(interval);\r\n\r\n//     React.useEffect(() => {\r\n//         loadFilmInfo(id);\r\n//         loadTrailer(id);\r\n//         loadSlider(id);\r\n//         dispatch(initialSlider(true));\r\n//         dispatch(changeSlidePosition());\r\n//     }, []);\r\n\r\n//     const itemArr = [\r\n//         {\r\n//             title: 'Страна',\r\n//             item: !film ? [] : film.countries[0].country\r\n//         },\r\n//         {\r\n//             title: 'Жанр',\r\n//             item: !film ? [] : film.genres\r\n//         },\r\n//         {\r\n//             title: 'Описание',\r\n//             item: !film ? [] : film.description\r\n//         },\r\n//         {\r\n//             title: 'Факты',\r\n//             item: !film ? [] : film.facts\r\n//         },\r\n//         {\r\n//             title: 'Трейлер',\r\n//             item: trailerId\r\n//         }\r\n//     ];\r\n\r\n\r\n\r\n//     return (\r\n\r\n//         <div className='filmPage'>\r\n//             {!film ? <Loader />\r\n//                 : (\r\n//                     <div className='filmBlock'>\r\n//                         <Slider\r\n//                             id={id}\r\n//                             autoSliderInit={autoSlider}\r\n//                             count={sliderCount}\r\n//                             position={slidePosition}\r\n//                             stopSlider={stopAutoSlider}\r\n//                         />\r\n//                         <div className='infoWrapper'>\r\n//                             <img className='desctopPoster'\r\n//                                 src={film.posterUrlPreview}\r\n//                                 alt='poster'>\r\n//                             </img>\r\n//                             <div className='infoBlock'>\r\n//                                 <div className='nameBlock'>\r\n//                                     <img className='mobilePoster'\r\n//                                         src={film.posterUrlPreview}\r\n//                                         alt='poster'>\r\n//                                     </img>\r\n//                                     <div>\r\n//                                         <h1>{film.nameRu}</h1>\r\n//                                         <span><p>{`${film.nameEn} (${film.year})`}</p></span>\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 {itemArr.map((item, index) => <InfoItem key={index} infoItem={item} i={index} />)}\r\n//                                 <div className='infoItem'>\r\n//                                     <Link to='/'><h4>Вернутся на главную</h4></Link>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default FilmPage","C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Slider.jsx",["72","73","74"],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\Loader.jsx",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\components\\InfoItem.jsx",["75"],"import React from 'react'\r\n\r\nconst InfoItem = React.memo(function InfoItem({ infoItem, i }) {\r\n    const [spoilerInit, setSpoilerInit] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setSpoilerInit(!spoilerInit);\r\n    };\r\n\r\n    return (\r\n        <div className={`infoItem ${(!infoItem.item || !infoItem.item.length) ? 'hide' : ''}`}>\r\n            <h3>{infoItem.title}</h3>\r\n            {\r\n                i === 1 ? <ul>{infoItem.item.map((item, i) => <li key={i}>{item.genre}</li>)}</ul>\r\n                    : i === 3 ? (\r\n                        <details>\r\n                            <summary onClick={handleClick}>\r\n                                {!spoilerInit ? 'Показать' : 'Скрыть'}\r\n                            </summary>\r\n                            <ul>{infoItem.item.map((item, i) => <li key={i}>{item}</li>)}</ul>\r\n                        </details>\r\n                    )\r\n                        : i === 4 ? (\r\n                            <div className='trailerBlock'>\r\n                                <iframe\r\n                                    width=\"660\"\r\n                                    height=\"415\"\r\n                                    src={`https://www.youtube.com/embed/${infoItem.item}?&disablekb=0`}\r\n                                    frameBorder=\"0\"\r\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                    allowFullScreen>\r\n                                </iframe>\r\n                            </div>\r\n                        )\r\n                            : <p>{infoItem.item}</p>\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\n// const InfoItem = ({ infoItem, i }) => {\r\n\r\n//     const [spoilerInit, setSpoilerInit] = React.useState(false);\r\n\r\n//     const handleClick = () => {\r\n//         setSpoilerInit(!spoilerInit);\r\n//     };\r\n\r\n//     return (\r\n//         <div className={`infoItem ${(!infoItem.item || !infoItem.item.length) ? 'hide' : ''}`}>\r\n//             <h3>{infoItem.title}</h3>\r\n//             {\r\n//                 i === 1 ? <ul>{infoItem.item.map((item, i) => <li key={i}>{item.genre}</li>)}</ul>\r\n//                     : i === 3 ? (\r\n//                         <details>\r\n//                             <summary onClick={handleClick}>\r\n//                                 {!spoilerInit ? 'Показать' : 'Скрыть'}\r\n//                             </summary>\r\n//                             <ul>{infoItem.item.map((item, i) => <li key={i}>{item}</li>)}</ul>\r\n//                         </details>\r\n//                     )\r\n//                         : i === 4 ? (\r\n//                             <div className='trailerBlock'>\r\n//                                 <iframe\r\n//                                     width=\"660\"\r\n//                                     height=\"415\"\r\n//                                     src={`https://www.youtube.com/embed/${infoItem.item}?&disablekb=0`}\r\n//                                     frameBorder=\"0\"\r\n//                                     allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n//                                     allowFullScreen>\r\n//                                 </iframe>\r\n//                             </div>\r\n//                         )\r\n//                             : <p>{infoItem.item}</p>\r\n//             }\r\n//         </div>\r\n//     )\r\n// };\r\n\r\nexport default InfoItem","C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\redusers\\index.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\store.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\redusers\\slider.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\films.js",[],"C:\\Users\\Владимир\\Develop\\movie-search\\src\\redux\\actions\\slider.js",[],{"ruleId":"76","severity":1,"message":"77","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":21},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"76","severity":1,"message":"84","line":8,"column":46,"nodeType":"78","messageId":"79","endLine":8,"endColumn":59},{"ruleId":"76","severity":1,"message":"85","line":14,"column":5,"nodeType":"78","messageId":"79","endLine":14,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":73,"column":8,"nodeType":"88","endLine":73,"endColumn":10,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":53,"column":8,"nodeType":"88","endLine":53,"endColumn":10,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":59,"column":49,"nodeType":"94","endLine":59,"endColumn":107},{"ruleId":"92","severity":1,"message":"93","line":60,"column":23,"nodeType":"94","endLine":60,"endColumn":90},{"ruleId":"95","severity":1,"message":"96","line":25,"column":33,"nodeType":"94","endLine":31,"endColumn":53},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'changeCounter' is defined but never used.","'interval' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch', 'id', and 'loadSlider'. Either include them or remove the dependency array.","ArrayExpression",["99"],"React Hook React.useEffect has missing dependencies: 'autoSlider', 'dispatch', and 'frames.length'. Either include them or remove the dependency array.",["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [dispatch, id, loadSlider]",{"range":"105","text":"106"},"Update the dependencies array to be: [autoSlider, dispatch, frames.length]",{"range":"107","text":"108"},[2559,2561],"[dispatch, id, loadSlider]",[1431,1433],"[autoSlider, dispatch, frames.length]"]