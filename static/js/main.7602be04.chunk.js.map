{"version":3,"sources":["redux/actions/loadFilms.js","components/Header.jsx","redux/actions/isLoaded.js","components/FilmCard.jsx","redux/actions/getId.js","components/Loader.jsx","pages/Home.jsx","components/InfoItem.jsx","redux/actions/initialSlider.js","components/Slider.jsx","pages/FilmPage.jsx","App.js","redux/redusers/films.js","index.js"],"names":["loadFilms","films","type","payload","headers","Header","React","useState","filmName","setFilmName","dispatch","useDispatch","searchByName","name","a","fetch","res","json","useEffect","className","to","placeholder","value","onChange","e","target","src","alt","width","height","FilmCard","film","nameRu","year","onClick","id","filmId","getId","posterUrlPreview","Loader","Home","useSelector","state","isLoaded","length","map","item","InfoItem","infoItem","i","spoilerInit","setSpoilerInit","title","genre","frameBorder","allow","allowFullScreen","initialSlider","flag","Slider","autoSliderInit","position","changePosition","slideArr","setSlideArr","slideCount","setSlideCount","interval","loadFrames","frames","framesArr","filter","_","setInterval","clearInterval","stopAutoSlider","console","log","frame","image","style","index","margin","display","marginTop","borderRadius","transition","zIndex","opacity","viewBox","fill","xmlns","d","FilmPage","setFilm","trailerId","setTrailerId","slidePos","setSlidePos","autoSlider","loadFilmInfo","data","loadTrailer","trailers","url","split","join","itemArr","countries","country","genres","description","facts","document","body","clientWidth","nameEn","App","path","component","exact","initialState","store","createStore","action","ReactDOM","render","getElementById"],"mappings":"iPAAaA,EAAY,SAACC,GAAD,MAAY,CACjCC,KAAM,aACNC,QAASF,ICKPG,EAAU,CACZ,YAAa,wCA8CFC,EA3CA,WAAO,IAAD,EAEeC,IAAMC,SAAS,IAF9B,mBAEVC,EAFU,KAEAC,EAFA,KAGXC,EAAWC,cAMXC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACjBJ,ECrBuB,CAC3BR,KAAM,YDmBe,SAECa,MAAM,gFAAD,OAAiFF,GAAQ,CAAET,YAFjG,cAEXY,EAFW,gBAGOA,EAAIC,OAHX,gBAGThB,EAHS,EAGTA,MACRS,EAASV,EAAUC,IAJF,2CAAH,sDAWlB,OAJAK,IAAMY,WAAU,WACZN,EAAaJ,MAIb,qBAAKW,UAAU,gBAAf,SACI,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,6CAEJ,uBACIlB,KAAK,OAELmB,YAAY,8FACZC,MAAOd,EACPe,SAAU,SAAAC,GAAC,OA1BLF,EA0BsBE,EAAEC,OAAOH,WAzBjDb,EAAYa,GADK,IAACA,KA4BV,qBAAKI,IAAI,sGACLC,IAAI,YACJC,MAAM,OACNC,OAAO,eEjBZC,EAxBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEVrB,EAAWC,cAMjB,OACI,sBAAKQ,UAAU,cAAf,UACI,oBAAIA,UAAU,WAAd,SAA0BY,EAAKC,SAC/B,wCAASD,EAAKE,KAAd,OACA,cAAC,IAAD,CAAMb,GAAG,YAAT,SACI,qBACIc,QAAS,kBAVJC,EAUsBJ,EAAKK,YAT5C1B,ECXa,SAACyB,GAAD,MAAS,CAC1BjC,KAAM,SACNC,QAASgC,GDSIE,CAAMF,IADC,IAACA,GAWLhB,UAAU,UACVQ,IAAI,SACJD,IAAKK,EAAKO,yBErBfC,EAFA,kBAAM,qBAAKpB,UAAU,YCmBrBqB,EAbF,WAAO,IAAD,EAEaC,aAAY,SAAAC,GAAK,OAAIA,KAAzCzC,EAFO,EAEPA,MAAO0C,EAFA,EAEAA,SAEf,OACI,qBAAKxB,UAAU,eAAf,SACMwB,EACK1C,EAAM2C,OACH3C,EAAM4C,KAAI,SAACC,EAAMX,GAAP,OAAc,cAAC,EAAD,CAAmBJ,KAAMe,GAAVX,MAD3B,4KADT,cAAC,EAAD,OC6BVY,EAvCE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,EAAQ,EAEI3C,IAAMC,UAAS,GAFnB,mBAE3B2C,EAF2B,KAEdC,EAFc,KAQlC,OACI,sBAAKhC,UAAS,mBAAgB6B,EAASF,MAASE,EAASF,KAAKF,OAAmB,GAAT,QAAxE,UACI,6BAAKI,EAASI,QAEJ,IAANH,EAAU,6BAAKD,EAASF,KAAKD,KAAI,SAACC,EAAMG,GAAP,OAAa,6BAAaH,EAAKO,OAATJ,QAC3C,IAANA,EACE,oCACI,yBAASf,QAXb,WAChBiB,GAAgBD,IAUI,SACMA,EAA2B,uCAAb,qDAEpB,6BAAKF,EAASF,KAAKD,KAAI,SAACC,EAAMG,GAAP,OAAa,6BAAaH,GAAJG,WAGzC,IAANA,EACE,qBAAK9B,UAAU,eAAf,SACI,wBACIS,MAAM,MACNC,OAAO,MACPH,IAAG,wCAAmCsB,EAASF,KAA5C,iBACHQ,YAAY,IACZC,MAAM,2FACNC,iBAAe,MAIrB,4BAAIR,EAASF,WCnC9BW,EAAgB,SAACC,GAAD,MAAW,CACpCxD,KAAM,iBACNC,QAASuD,ICGPtD,EAAU,CACZ,YAAa,wCA8IFuD,EA3IA,SAAC,GAAsD,IAApDxB,EAAmD,EAAnDA,GAAIyB,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAAqB,EAEjCxD,IAAMC,SAAS,IAFkB,mBAE1DwD,EAF0D,KAEhDC,EAFgD,OAG7B1D,IAAMC,SAAS,GAHc,mBAG1D0D,EAH0D,KAG9CC,EAH8C,KAS7DC,EAAW,KAETzD,EAAWC,cAEXyD,EAAU,uCAAG,WAAOjC,GAAP,qBAAArB,EAAA,+EAEOC,MAAM,sDAAD,OAAuDoB,EAAvD,WAAoE,CAAE/B,YAFlF,cAELY,EAFK,gBAGcA,EAAIC,OAHlB,gBAGHoD,EAHG,EAGHA,OACFC,EAAYD,EAAOE,QAAO,SAACC,EAAGrC,GAAJ,OAAWA,EAAK,MAChD6B,EAAYM,GALD,kDAOXN,EAAY,IAPD,kEAAH,sDAWZJ,GAAkBG,EAASnB,SAC3BuB,EAAWM,aAAY,WACnBP,EAAcD,IAAeF,EAASnB,OAAS,EAAI,EAAIqB,EAAa,GACpES,cAAcP,KACf,MAGP,IAAMQ,EAAiB,WACnBD,cAAcP,GACdzD,EAAS+C,GAAc,KA8D3B,OAPAmB,QAAQC,IAAIhB,GAEZvD,IAAMY,WAAU,WACZkD,EAAWjC,GACX2B,MACD,IAGC,sBAAK3C,UAAU,gBAAf,UACI,qBAAKA,UAAU,cAAf,SACK4C,EAASnB,OACJmB,EAASlB,KAAI,SAACiC,EAAO3C,GAAR,OAAe,qBAAcT,IAAKoD,EAAMC,MAAOC,OA1BzDC,EA0B4E9C,EAzB7F,CACI+C,OAAQ,SACRC,QAAS,QAGTC,UAAU,GAAD,OAAKH,EAAQ,EAAR,WAAgBpB,GAAa,IAC3CwB,aAAc,MACdC,WAAY,OAEZC,OAAQN,EAAQ,EAChBO,QAAQ,GAAD,OAAKP,IAAUhB,EAAa,OAAS,QAeI9B,GA1BpC,IAAC8C,KA2BH,qBAAKvD,IAAI,8DAEnB,sBAAKP,UAAS,yBAAqB4C,EAASnB,OAAkB,GAAT,QAArD,UACI,wBAAQV,QA9DF,WACdyC,IACAT,EAA6B,IAAfD,EAAmBF,EAASnB,OAAS,EAAIqB,EAAa,IA4D5D,SACI,qBACI9C,UAAU,OACVS,MAAM,KACNC,OAAO,KACP4D,QAAQ,WACRC,KAAK,OACLC,MAAM,6BANV,SAQI,sBACIC,EAAE,4WACFF,KAAK,cAIjB,wBAAQxD,QAlFA,WAChByC,IACAT,EAAcD,IAAeF,EAASnB,OAAS,EAAI,EAAIqB,EAAa,IAgF5D,SACI,sBACI9C,UAAU,QACVS,MAAM,KACNC,OAAO,KACP4D,QAAQ,WACRC,KAAK,OACLC,MAAM,6BANV,UAQI,sBACIC,EAAE,4WACFF,KAAK,UAET,kCCnIlBtF,EAAU,CACZ,YAAa,wCAgHFyF,EA7GE,WAAO,IAAD,EAEKvF,IAAMC,SAAS,MAFpB,mBAEZwB,EAFY,KAEN+D,EAFM,OAGexF,IAAMC,SAAS,IAH9B,mBAGZwF,EAHY,KAGDC,EAHC,OAIa1F,IAAMC,SAAS,SAJ5B,mBAIZ0F,EAJY,KAIFC,EAJE,OAMQzD,aAAY,SAAAC,GAAK,OAAIA,KAAxCP,EANW,EAMXA,GAAIgE,EANO,EAMPA,WAENzF,EAAWC,cAEXyF,EAAY,uCAAG,WAAOjE,GAAP,mBAAArB,EAAA,sEACCC,MAAM,sDAAD,OAAuDoB,GAAM,CAAE/B,YADrE,cACXY,EADW,gBAEMA,EAAIC,OAFV,gBAEToF,EAFS,EAETA,KACRP,EAAQO,GAHS,2CAAH,sDAMZC,EAAW,uCAAG,WAAOnE,GAAP,qBAAArB,EAAA,+EAEMC,MAAM,sDAAD,OAAuDoB,EAAvD,WAAoE,CAAE/B,YAFjF,cAENY,EAFM,gBAGeA,EAAIC,OAHnB,gBAGJsF,EAHI,EAGJA,SACFR,EAAYQ,EAAS,GAAGC,IAAIC,MAAM,KAAKlC,QAAO,SAACC,EAAGrC,GAAJ,OAAkB,IAAPA,KAAUuE,OACzEV,EAAaD,GALD,kDAOZC,EAAa,IACbpB,QAAQC,IAAR,MARY,kEAAH,sDAsBjBvE,IAAMY,WAAU,WACZkF,EAAajE,GACbmE,EAAYnE,GACZzB,EAAS+C,GAAc,MACxB,IAEH,IAAMkD,EAAU,CACZ,CACIvD,MAAO,uCACPN,KAAOf,EAAYA,EAAK6E,UAAU,GAAGC,QAAvB,IAElB,CACIzD,MAAO,2BACPN,KAAOf,EAAYA,EAAK+E,OAAV,IAElB,CACI1D,MAAO,mDACPN,KAAOf,EAAYA,EAAKgF,YAAV,IAElB,CACI3D,MAAO,iCACPN,KAAOf,EAAYA,EAAKiF,MAAV,IAElB,CACI5D,MAAO,6CACPN,KAAMiD,IAMd,OAEI,qBAAK5E,UAAU,WAAf,SACMY,EAEM,sBAAKZ,UAAU,YAAf,UACI,cAAC,EAAD,CACIgB,GAAIA,EACJyB,eAAgBuC,EAChBrC,eAlDI,WACxB,IAAMlC,EAAQqF,SAASC,KAAKC,YACxBvF,GAAS,KAAOA,GAAS,IACzBsE,EAAY,SACLtE,GAAS,KAChBsE,EAAY,SAEhBtB,QAAQC,IAAI,gEAAejD,IA4CPiC,SAAUoC,IAEd,sBAAK9E,UAAU,cAAf,UACI,qBAAKA,UAAU,gBACXO,IAAKK,EAAKO,iBACVX,IAAI,WAER,sBAAKR,UAAU,YAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,eACXO,IAAKK,EAAKO,iBACVX,IAAI,WAER,gCACI,6BAAKI,EAAKC,SACV,+BAAM,sCAAOD,EAAKqF,OAAZ,aAAuBrF,EAAKE,KAA5B,eAGb0E,EAAQ9D,KAAI,SAACC,EAAMmC,GAAP,OAAiB,cAAC,EAAD,CAAUjC,SAAUF,EAAMG,EAAGgC,OAC3D,qBAAK9D,UAAU,WAAf,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAa,uJA3B5B,cAAC,EAAD,OCpENiG,EAVH,WACV,OACE,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW/E,EAAMgF,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAW1B,EAAU2B,OAAK,Q,wBCVlDC,EAAe,CACjBxH,MAAO,KACP0C,UAAU,EACVR,GAAI,KACJgE,YAAY,GAqCDuB,EAFDC,aAhCA,WAAmC,IAAlCjF,EAAiC,uDAAzB+E,EAAcG,EAAW,uCAC5C,OAAQA,EAAO1H,MACX,IAAK,UACD,OAAO,2BACAwC,GADP,IAEIC,UAAU,IAGlB,IAAK,aACD,OAAO,2BACAD,GADP,IAEIzC,MAAO2H,EAAOzH,QACdwC,UAAU,IAGlB,IAAK,SACD,OAAO,2BACAD,GADP,IAEIP,GAAIyF,EAAOzH,UAGnB,IAAK,iBACD,OAAO,2BACAuC,GADP,IAEIyD,WAAYyB,EAAOzH,UAG3B,QACI,OAAOuC,MC5BnBmF,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJT,SAASc,eAAe,W","file":"static/js/main.7602be04.chunk.js","sourcesContent":["export const loadFilms = (films) => ({\r\n    type: 'LOAD_FILMS',\r\n    payload: films,\r\n});\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { loadFilms } from '../redux/actions/loadFilms';\r\nimport { isLoaded } from '../redux/actions/isLoaded';\r\n\r\nconst headers = {\r\n    'X-API-KEY': '41bf77c1-b2b8-4711-b6b6-76cf890ced57',\r\n};\r\n\r\nconst Header = () => {\r\n\r\n    const [filmName, setFilmName] = React.useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (value) => {\r\n        setFilmName(value)\r\n    };\r\n\r\n    const searchByName = async (name) => {\r\n        dispatch(isLoaded());\r\n        const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-keyword?keyword=${name}`, { headers });\r\n        const { films } = await res.json();\r\n        dispatch(loadFilms(films));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        searchByName(filmName);\r\n    });\r\n\r\n    return (\r\n        <div className='headerWrapper'>\r\n            <div className='headerItems'>\r\n                <Link to='/'>\r\n                    <h1>ALL FILMS</h1>\r\n                </Link>\r\n                <input\r\n                    type='text'\r\n                    // maxlength='5'\r\n                    placeholder='Введите название'\r\n                    value={filmName}\r\n                    onChange={e => handleChange(e.target.value)}>\r\n                </input>\r\n                <img src='https://cdn1.iconfinder.com/data/icons/jumpicon-basic-ui-line-1/32/-_Magnifier-Search-Zoom--512.png'\r\n                    alt='magnifier'\r\n                    width='25px'\r\n                    height='25px'>\r\n                </img>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","export const isLoaded = () => ({\r\n    type: 'LOADING'\r\n});","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { getId } from '../redux/actions/getId'\r\n\r\nconst FilmCard = ({ film }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCange = (id) => {\r\n        dispatch(getId(id));\r\n    };\r\n\r\n    return (\r\n        <div className='cardWrapper'>\r\n            <h3 className='cardName'>{film.nameRu}</h3>\r\n            <h4>{`(${film.year})`}</h4>\r\n            <Link to='/filmPage'>\r\n                <img\r\n                    onClick={() => handleCange(film.filmId)}\r\n                    className='cardImg'\r\n                    alt='Poster'\r\n                    src={film.posterUrlPreview}>\r\n                </img>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilmCard","export const getId = (id) => ({\r\n    type: 'GET_ID',\r\n    payload: id,\r\n});","const Loader = () => <div className='loader'></div>\r\n\r\nexport default Loader;","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport FilmCard from '../components/FilmCard';\r\nimport Loader from '../components/Loader';\r\n\r\nconst Home = () => {\r\n\r\n    const { films, isLoaded } = useSelector(state => state);\r\n\r\n    return (\r\n        <div className='filmsWrapper'>\r\n            {!isLoaded ? <Loader />\r\n                : !films.length ? <h1>Начните что нибудь искать :)</h1>\r\n                    : films.map((item, id) => <FilmCard key={id} film={item} />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst InfoItem = ({ infoItem, i }) => {\r\n\r\n    const [spoilerInit, setSpoilerInit] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setSpoilerInit(!spoilerInit);\r\n    };\r\n\r\n    return (\r\n        <div className={`infoItem ${(!infoItem.item || !infoItem.item.length) ? 'hide' : ''}`}>\r\n            <h3>{infoItem.title}</h3>\r\n            {\r\n                i === 1 ? <ul>{infoItem.item.map((item, i) => <li key={i}>{item.genre}</li>)}</ul>\r\n                    : i === 3 ? (\r\n                        <details>\r\n                            <summary onClick={handleClick}>\r\n                                {!spoilerInit ? 'Показать' : 'Скрыть'}\r\n                            </summary>\r\n                            <ul>{infoItem.item.map((item, i) => <li key={i}>{item}</li>)}</ul>\r\n                        </details>\r\n                    )\r\n                        : i === 4 ? (\r\n                            <div className='trailerBlock'>\r\n                                <iframe\r\n                                    width=\"660\"\r\n                                    height=\"415\"\r\n                                    src={`https://www.youtube.com/embed/${infoItem.item}?&disablekb=0`}\r\n                                    frameBorder=\"0\"\r\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                    allowFullScreen>\r\n                                </iframe>\r\n                            </div>\r\n                        )\r\n                            : <p>{infoItem.item}</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoItem\r\n","export const initialSlider = (flag) => ({\r\n    type: 'INITIAL_SLIDER',\r\n    payload: flag,\r\n});","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { initialSlider } from '../redux/actions/initialSlider'\n\nconst headers = {\n    'X-API-KEY': '41bf77c1-b2b8-4711-b6b6-76cf890ced57',\n};\n\nconst Slider = ({ id, autoSliderInit, position, changePosition }) => {\n\n    const [slideArr, setSlideArr] = React.useState([]);\n    const [slideCount, setSlideCount] = React.useState(1);\n    // const [slideSize, setSlideSize] = React.useState({\n    //     width: '950px',\n    //     height: '440px'\n    // });\n\n    let interval = null;\n\n    const dispatch = useDispatch();\n\n    const loadFrames = async (id) => {\n        try {\n            const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}/frames`, { headers });\n            const { frames } = await res.json();\n            const framesArr = frames.filter((_, id) => id < 15);\n            setSlideArr(framesArr);\n        } catch {\n            setSlideArr([]);\n        };\n    };\n\n    if (autoSliderInit && slideArr.length) {\n        interval = setInterval(() => {\n            setSlideCount(slideCount === slideArr.length - 1 ? 0 : slideCount + 1);\n            clearInterval(interval);\n        }, 3000);\n    }\n\n    const stopAutoSlider = () => {\n        clearInterval(interval);\n        dispatch(initialSlider(false));\n    };\n\n    const slideFoward = () => {\n        stopAutoSlider();\n        setSlideCount(slideCount === slideArr.length - 1 ? 0 : slideCount + 1);\n    };\n\n    const slideBack = () => {\n        stopAutoSlider();\n        setSlideCount(slideCount === 0 ? slideArr.length - 1 : slideCount - 1);\n    };\n\n    // const changeSlideSize = () => {\n    //     const windowWidth = document.body.clientWidth;\n    //     if (windowWidth <= 950) {\n    //         setSlideSize({\n    //             width: '100wv',\n    //             height: '440px'\n    //         })\n    //     }\n\n    //     console.log(windowWidth);\n    // }\n\n    // const sliderItems = (url, index) => (\n    //     {\n    //         width: size.width,\n    //         height: size.height,\n    //         marginTop: `${index > 0 ? `-${size.height}` : ''}`,\n    //         backgroundImage: `url(${url})`,\n    //         backgroundSize: 'cover',\n    //         borderRadius: '3px',\n    //         transition: '1.5s',\n    //         position: 'relative',\n    //         zIndex: index + 1,\n    //         opacity: `${index === slideCount ? '100%' : '0'}`\n    //     }\n    // );\n\n    const slideStyles = (index) => (\n        {\n            margin: '0 auto',\n            display: 'block',\n            // width: size.width,\n            // height: size.height,\n            marginTop: `${index > 0 ? `-${position}` : ''}`,\n            borderRadius: '3px',\n            transition: '1.5s',\n            // position: 'relative',\n            zIndex: index + 1,\n            opacity: `${index === slideCount ? '100%' : '0'}`\n        }\n    );\n\n    console.log(position);\n\n    React.useEffect(() => {\n        loadFrames(id);\n        changePosition();\n    }, []);\n\n    return (\n        <div className='sliderWrapper'>\n            <div className='sliderBlock'>\n                {slideArr.length\n                    ? slideArr.map((frame, id) => <img key={id} src={frame.image} style={slideStyles(id)} />)\n                    : <img src='https://argamak-sher.uz/wp-content/uploads/no-image.png'></img>}\n            </div>\n            <div className={`sliderBtnBlock ${!slideArr.length ? 'hide' : ''}`}>\n                <button onClick={slideBack}>\n                    <svg\n                        className=\"left\"\n                        width=\"50\"\n                        height=\"50\"\n                        viewBox=\"0 0 10 6\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                            fill=\"black\"\n                        />\n                    </svg>\n                </button>\n                <button onClick={slideFoward}>\n                    <svg\n                        className=\"right\"\n                        width=\"50\"\n                        height=\"50\"\n                        viewBox=\"0 0 10 6\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                            fill=\"black\"\n                        />\n                        <g></g>\n                    </svg>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Slider","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport InfoItem from '../components/InfoItem'\r\nimport Slider from '../components/Slider';\r\nimport Loader from '../components/Loader';\r\nimport { initialSlider } from '../redux/actions/initialSlider';\r\n\r\nconst headers = {\r\n    'X-API-KEY': '41bf77c1-b2b8-4711-b6b6-76cf890ced57',\r\n};\r\n\r\nconst FilmPage = () => {\r\n\r\n    const [film, setFilm] = React.useState(null);\r\n    const [trailerId, setTrailerId] = React.useState('');\r\n    const [slidePos, setSlidePos] = React.useState('440px');\r\n\r\n    const { id, autoSlider } = useSelector(state => state);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const loadFilmInfo = async (id) => {\r\n        const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}`, { headers });\r\n        const { data } = await res.json();\r\n        setFilm(data);\r\n    };\r\n\r\n    const loadTrailer = async (id) => {\r\n        try {\r\n            const res = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${id}/videos`, { headers });\r\n            const { trailers } = await res.json();\r\n            const trailerId = trailers[0].url.split('=').filter((_, id) => id === 1).join();\r\n            setTrailerId(trailerId);\r\n        } catch (error) {\r\n            setTrailerId('');\r\n            console.log(error);\r\n        };\r\n    };\r\n\r\n    const changeSlidePosition = () => {\r\n        const width = document.body.clientWidth;\r\n        if (width <= 950 && width >= 360) {\r\n            setSlidePos('340px');\r\n        } else if (width <= 350) {\r\n            setSlidePos('300px')\r\n        };\r\n        console.log('Размер окна', width);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        loadFilmInfo(id);\r\n        loadTrailer(id);\r\n        dispatch(initialSlider(true));\r\n    }, []);\r\n\r\n    const itemArr = [\r\n        {\r\n            title: 'Страна',\r\n            item: !film ? [] : film.countries[0].country\r\n        },\r\n        {\r\n            title: 'Жанр',\r\n            item: !film ? [] : film.genres\r\n        },\r\n        {\r\n            title: 'Описание',\r\n            item: !film ? [] : film.description\r\n        },\r\n        {\r\n            title: 'Факты',\r\n            item: !film ? [] : film.facts\r\n        },\r\n        {\r\n            title: 'Трейлер',\r\n            item: trailerId\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='filmPage'>\r\n            {!film ? <Loader />\r\n                : (\r\n                    <div className='filmBlock'>\r\n                        <Slider\r\n                            id={id}\r\n                            autoSliderInit={autoSlider}\r\n                            changePosition={changeSlidePosition}\r\n                            position={slidePos}\r\n                        />\r\n                        <div className='infoWrapper'>\r\n                            <img className='desctopPoster'\r\n                                src={film.posterUrlPreview}\r\n                                alt='poster'>\r\n                            </img>\r\n                            <div className='infoBlock'>\r\n                                <div className='nameBlock'>\r\n                                    <img className='mobilePoster'\r\n                                        src={film.posterUrlPreview}\r\n                                        alt='poster'>\r\n                                    </img>\r\n                                    <div>\r\n                                        <h1>{film.nameRu}</h1>\r\n                                        <span><p>{`${film.nameEn} (${film.year})`}</p></span>\r\n                                    </div>\r\n                                </div>\r\n                                {itemArr.map((item, index) => <InfoItem infoItem={item} i={index} />)}\r\n                                <div className='infoItem'>\r\n                                    <Link to='/'><h4>Вернутся на главную</h4></Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilmPage\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport FilmPage from './pages/FilmPage';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Route path='/' component={Home} exact />\n      <Route path='/filmPage' component={FilmPage} exact />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n    films: null,\r\n    isLoaded: false,\r\n    id: null,\r\n    autoSlider: true\r\n};\r\n\r\nconst films = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                isLoaded: false\r\n            }\r\n\r\n        case 'LOAD_FILMS':\r\n            return {\r\n                ...state,\r\n                films: action.payload,\r\n                isLoaded: true\r\n            }\r\n\r\n        case 'GET_ID':\r\n            return {\r\n                ...state,\r\n                id: action.payload\r\n            }\r\n\r\n        case 'INITIAL_SLIDER':\r\n            return {\r\n                ...state,\r\n                autoSlider: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nconst store = createStore(films);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from './App';\nimport './scss/app.scss';\nimport store from './redux/redusers/films'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}